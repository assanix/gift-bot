from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext
from states.order_states import OrderStates

callbacks_router = Router()

@callbacks_router.callback_query(F.data.startswith("edit_"))
async def edit_data(callback: types.CallbackQuery, state: FSMContext):
    action = callback.data.split("_")[1]
    await callback.answer()

    if action == "check":
        await callback.message.answer("üì§ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π <b>—á–µ–∫</b> –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
        await state.set_state(OrderStates.waiting_for_check)

    elif action == "fio":
        await callback.message.answer("üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ <b>–§–ò–û</b>:")
        await state.set_state(OrderStates.waiting_for_fio)

    elif action == "address":
        await callback.message.answer("üè† –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π <b>–∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</b>:")
        await state.set_state(OrderStates.waiting_for_address)

    elif action == "phone":
        await callback.message.answer("üìû –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>:")
        await state.set_state(OrderStates.waiting_for_phone)
