import asyncio

from aiogram import Router, types
from aiogram.filters import Command
from database import db
from config import ADMIN_IDS
import logging

broadcast_router = Router()
logger = logging.getLogger(__name__)

ADMIN_IDS = [int(chat_id.strip()) for chat_id in ADMIN_IDS.split(",") if chat_id.strip().isdigit()]


BROADCAST_MESSAGE = (
"–ê–ª–º–∞—Ç—ã “õ–∞–ª–∞—Å—ã –±–æ–π—ã–Ω—à–∞ qauashaq —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä–≥–µ–Ω –∫–ª–∏–µ–Ω—Ç—Ç–µ—Ä.\n "
"–ê–ª–º–∞—Ç—ã “õ–∞–ª–∞—Å—ã, –°–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª—å—Ü–æ 11(–¢–†–¶ –†–∞—Ö–∞—Ç –Ω–æ–≤—ã–π –∑–¥–∞–Ω–∏–µ) 1- —ç—Ç–∞–∂ , 1-—Ä—è–¥, 25- –±—É—Ç–∏–∫—Ç–∞–Ω –∞–ª—ã–ø –∫–µ—Ç–µ –∞–ª–∞—Å—ã–∑–¥–∞—Ä\n"
"–ö–µ–ª–µ—Ä–¥–µ –º—ñ–Ω–¥–µ—Ç—Ç—ñ —Ç—É—Ä–¥–µ —á–µ–∫—Ç—ã –∫”©—Ä—Å–µ—Ç—ñ“£—ñ–∑\n"
"–ë–∞—Å“õ–∞ “õ–∞–ª–∞–ª–∞—Ä –∂–∞“õ—ã–Ω–¥–∞ —Å—ñ–∑–¥–µ—Ä–¥—ñ“£ “õ–∞–ª–∞–ª–∞—Ä—ã“£—ã–∑–¥–∞“ì—ã –∞–¥—Ä–µ—Å—Ç—ñ –æ—Å—ã–Ω–¥–∞ –∂–∞–∑–∞–º—ã–∑. –°–æ–ª –∫–µ–∑–¥–µ –∞–ª—ã–ø¬†–∫–µ—Ç–µ¬†–∞–ª–∞—Å—ã–∑–¥–∞—Ä\n"
)


async def broadcast_message(bot, text):
    users = await db.orders.find({}).to_list(None)
    success_count, fail_count = 0, 0

    for user in users:
        chat_id = user.get("chat_id")
        if not chat_id:
            continue

        try:
            await bot.send_message(chat_id, text)
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            success_count += 1
            await asyncio.sleep(0.05)
        except Exception as e:
            fail_count += 1
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")

    return success_count, fail_count


@broadcast_router.message(Command("broadcast"))
async def start_broadcast(message: types.Message, bot):
    if message.from_user.id not in ADMIN_IDS:
        await message.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    await message.reply("üì§ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å...")
    success, fail = await broadcast_message(bot, BROADCAST_MESSAGE)
    await message.reply(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {success}\n‚ùå –û—à–∏–±–æ–∫: {fail}")